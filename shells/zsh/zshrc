# /etc/zsh/zshrc ou ~/.zshrc
# Main ZSH config file.
# (C)Formation Debian GNU/Linux by Alexis de Lattre
# http://formation-debian.via.ecp.fr/
# modified by louen -- louen at palouf.org

############################
# 1. Key configurations    #
############################

# Bind key to actions
bindkey ''    beginning-of-line       # Home
bindkey ''    end-of-line             # End
bindkey ''    delete-char             # Del
bindkey '[3~' delete-char             # Del
bindkey '[2~' overwrite-mode          # Insert
bindkey '[5~' history-search-backward # PgUp
bindkey '[6~' history-search-forward  # PgDn

# Key bindings for specific terms
if [ "$TERM" = "linux" -o "$TERM" = "screen" -o "$TERM" = "rxvt" ]
then
    bindkey '[1~' beginning-of-line       # Home
    bindkey '[4~' end-of-line             # End
fi

# xterm
if [ "$TERM" = "xterm" -o "xterm-256color" ]
then
    bindkey '[H'  beginning-of-line       # Home
    bindkey '[F'  end-of-line             # End
fi

# gnome-terminal
if [ "$COLORTERM" = "gnome-terminal" ]
then
    bindkey 'OH'  beginning-of-line       # Home
    bindkey 'OF'  end-of-line             # End
fi


# window title
case $TERM in
    xterm*)
        precmd () {print -Pn "\e]0;%n@%m: %~\a"}
        ;;
    *rxvt)
        precmd () {print -Pn "\e]0;%n@%m: %~\a"}
        ;;
esac

######################################
# 2. Prompt, colors and git options  #
######################################

# Setup git prompt info
autoload -Uz vcs_info
setopt prompt_subst
zstyle ':vcs_info:*' enable git
precmd () { vcs_info }

# Uncomment this to debug the hooks
#zstyle ':vcs_info:*+*:*' debug true

# Enable checking for (un)staged changes, enabling use of %u and %c
zstyle ':vcs_info:*' check-for-changes true
# Set custom strings for an unstaged vcs repo changes (*) and staged changes (+)
zstyle ':vcs_info:*' unstagedstr '%B%F{red}*%f%b'
zstyle ':vcs_info:*' stagedstr '%B%F{green}+%f%b'
# Patch format is shown in misc info (%m) e.g. when rebasing.
# show the first 10 chars of the current commit (%10>â€¦>%p%<<), then current commit [%n] / total commits [%a]
zstyle ':vcs_info:git:*' patch-format  '%F{yellow}%B%10>â€¦>%p%<<%b %n/%a%f'

# Formats is shown most of the time.
# Show branch [%b], then the unstaged [%u] and staged [%c] strings.
# NB: turning off bold is done with %%b due to conflict with %b subst
zstyle ':vcs_info:git:*' formats       '[%F{magenta}%B%b%%b%f|%u%c] '

# Action formats is shown when in the middle of an action (bisect, rebase, etc)
# Same setup as format with the additionnal action name [%a] and the extra info [%m]
zstyle ':vcs_info:git:*' actionformats '[%F{magenta}%B%b%%b%f|%B%F{cyan}%a%f%%b%m%f%u%c] '

zstyle ':vcs_info:git*+set-message:*' hooks git-untracked git-st git-detached-head


# Show marker if there are untracked files in repository
function +vi-git-untracked(){
if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
    git status --porcelain | grep -q '^?? ' 2> /dev/null ; then
    hook_com[staged]+='â€¦'
fi
}
# Add +x /-x when local branch is ahead / behind remote branch
function +vi-git-st() {
    local ahead behind
    local -a gitstatus


    # Exit early in case the worktree is on a detached HEAD
    if ! git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1;then
        hook_com[branch]+="%f L"
    fi

    local -a ahead_and_behind=(
        $(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
    )

    ahead=${ahead_and_behind[1]}
    behind=${ahead_and_behind[2]}

    (( $ahead )) && gitstatus+=( "%b%fâ†‘${ahead}" )
    (( $behind )) && gitstatus+=( "%b%fâ†“${behind}" )

    hook_com[branch]+=${(j:/:)gitstatus}
}

# Show commit hash in 'detached head' instead of a random branch name
function +vi-git-detached-head() {
if [[ -z "$(git symbolic-ref -q HEAD)" ]]; then
    hook_com[branch]=":$(git rev-parse --short HEAD)"
fi
}

# Configure the main prompt

# Our prompt will display
# time [ %D{date format} ] in cyan
# user name [%n] in red (or blue if root)
# '@' (in yellow)
# hostname [%m] in white
# the current directory (with home as ~) [%~] in green
# The prompt symbol [%#] (displays % or #) in yellow
# NB: single quotes are required for VCS info variable to work

if [ "`id -u`" -eq 0 ]; then
    export PS1='%{[36;1m%}%D{%H:%M} %{[34m%}%n%{[33m%}@%{[37m%}%m %{[32m%}%~%{[33m%}%#%{[0m%} ${vcs_info_msg_0_}'
else
    export PS1='%{[36;1m%}%D{%H:%M} %{[31m%}%n%{[33m%}@%{[37m%}%m %{[32m%}%~%{[33m%}%#%{[0m%} ${vcs_info_msg_0_}'
fi


# Do our own conda env display with blackjack and hookers
precmd_conda_info() {
    if [[ -n $CONDA_PREFIX ]];then
        CONDA_ENV="($(basename $CONDA_PREFIX))"
    else
        CONDA_ENV=""
    fi
}

precmd_functions+=( precmd_conda_info )
export RPROMPT='%B%F{180}$CONDA_ENV%f%b'

# use ls colors with dircolors
if [ -x /usr/bin/dircolors ]
then
    if [ -r ~/.dir_colors ]
    then
        eval "`dircolors -b ~/.dir_colors`"
    elif [ -r /etc/dir_colors ]
    then
        eval "`dircolors -b /etc/dir_colors`"
    else
        eval "`dircolors -b`"
    fi
fi


###########################################
# 3. ZSH options (see man zshoptions)     #
###########################################

# Deactivate beeps
unsetopt beep
unsetopt hist_beep
unsetopt list_beep
# `>|` should be use when overwriting  the content of a file
# `>`will only work on empty or nonexistent file names.
unsetopt clobber
# C-d is equivalent to logout
unsetopt ignore_eof
# Print the exit value if != 0
setopt print_exit_value
# Ask for confirm for Ì€rm *`
unsetopt rm_star_silent
# Do not enable correction of commands
#setopt correct
# Do not return an error if we use wildcards expanding to nothing
setopt nullglob

# Different autocomplete modes

# mode A (default mode)
# 1st tabulation : completes until ambiguity
# 2nd tabulation : displays the list of choices
# 3rd tabulation : completes with first list item
# 4th tabulation : completes with second list item, etc.

# mode B :
# 1st tabulation : displays the list of choices and completes
#                  with the first item of the list
# 2nd tabulation : completes with second list item, etc.
#setopt menu_complete

# Mode C :
# 1st tabulation : displays the list of choices and completes
#                  until ambiguity
# 2nd tabulation : completes with first list item
# 3rd tabulation : completes with second list item, etc.
#unsetopt list_ambiguous

# Autocomplete options
# When '/' is the last caracter of a completion, erase it
setopt auto_remove_slash
# Do not complete on hidden directories
unsetopt glob_dots

# Enable extended globs: NOT ^, range <x-y>, OR (x|y)
setopt extended_glob

# Follow symlinks
setopt chase_links

# When using '!' for history completion, write the command
# instead of running it immediately.
setopt hist_verify
# Invalid commands that match a director name execute 'cd directory"
setopt auto_cd
# 'cd' automatically pushes dirs on the stack
setopt auto_pushd
# Ignore duplicates in the stack
setopt pushd_ignore_dups
# Pushing in the stack is silent
setopt pushd_silent
# Pushing with no argument goes to home dir
setopt pushd_to_home

# Background jobs are set to nice 0
unsetopt bg_nice
# No hangup signal to background job when the shell exits
unsetopt hup


#################################
# 4. Command history parameters #
#################################

# History size
export HISTORY=1000
export SAVEHIST=1000

# History location
export HISTFILE=$HOME/.history

# append the history
#setopt append_history

# Incrementally write a command line in history as it is written;
setopt inc_append_history

# Ignore local duplicates in history
setopt hist_ignore_dups

# Ignore global duplicates in history
#setopt hist_ignore_all_dups

# Remove duplicates only when history is full
setopt hist_expire_dups_first

# Do not save the duplicates on any session.
#setopt hist_save_no_dups

# Do not show duplicates in searches.
setopt hist_find_no_dups


####################################
# 5. In-command completion options #
####################################

zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}'
zstyle ':completion:*' max-errors 3 numeric
zstyle ':completion:*' use-compctl false

fpath+=(~/.zsh)

autoload -U compinit
compinit


###############
# 6. Aliases  #
###############

if [ -f /etc/zsh/aliases ]; then
    . /etc/zsh/aliases
fi

if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

#####################
# 7. Local settings #
#####################

if [ -f ~/.zshrc.local ]; then
    . ~/.zshrc.local
fi
